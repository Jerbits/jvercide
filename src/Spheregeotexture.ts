/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: SonicVisual (https://sketchfab.com/sonicvisual)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/geometry-texture-effect-spheres-5058a0f82e744c27988304db012647d0
title: Geometry Texture Effect Spheres
*/
import * as THREE from 'three';

import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { useFrame, useThree } from '@react-three/fiber';

const deg2rad = (degrees:any) => degrees * (Math.PI / 180);

export default function Model({ ...props }) {
    const { nodes, materials } = useGLTF('/model/spheregeotexture.gltf');

    const groupRef = useRef<any>(null);

    useFrame(() => {
        groupRef.current.rotation.y += 0.0005;
    });
    useThree(({ camera }) => {
        camera.rotation.set(deg2rad(30), 0, 0);
    });
    
    
    const globalMaterial = new THREE.MeshStandardMaterial({
        color: 0x35133f,
        opacity: 1,
        alphaTest: 0,
        visible: true,
        metalness: 1,
        emissive: 0x000000,
        roughness: 0.4
    });
    return (
        <group ref={groupRef} {...props} dispose={null}>
            <mesh
                geometry={nodes.Plane.geometry}
                material={globalMaterial}
                rotation={[-Math.PI / 2, 0, -1.21]}
                scale={100}
            />
        </group>
    );
}

useGLTF.preload('/spheregeotexture.gltf');
